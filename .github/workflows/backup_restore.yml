name: Backup and Restore PostgreSQL

on:
  workflow_dispatch:  # Allows manual trigger

jobs:
  backup_restore:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install PostgreSQL client
        run: sudo apt-get install -y postgresql-client

      - name: Start PostgreSQL Container
        run: |
          docker run -d \
            --name postgres \
            -e POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
            -e POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
            -e POSTGRES_DB=${{ secrets.POSTGRES_DB }} \
            -p 5432:5432 \
            postgres:15

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..20}; do
            PGPASSWORD=${{ secrets.POSTGRES_PASSWORD }} psql -h localhost -U ${{ secrets.POSTGRES_USER }} -d ${{ secrets.POSTGRES_DB }} -c "SELECT 1;" && break
            echo "Waiting for PostgreSQL..."
            sleep 3
          done
          echo "PostgreSQL is ready!"

      - name: Run PostgreSQL Backup
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          BACKUP_DIR: backup
          MODE: backup
        run: |
          mkdir -p backup
          python3 postgres_backup_restore.py

      - name: Upload backup files as artifact
        uses: actions/upload-artifact@v4
        with:
          name: database-backup
          path: backup/

      - name: Restore PostgreSQL (Optional)
        if: false  # Set to true if you want auto-restore
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          BACKUP_DIR: backup
          MODE: restore
        run: |
          mkdir -p backup
          python3 postgres_backup_restore.py
